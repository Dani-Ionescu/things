# Turning on text-mode installation (little quicker than GUI)
text

# Setting up authentication and keyboard
auth --enableshadow --passalgo=sha512
keyboard --vckeymap=us --xlayouts='us'

# Installation files source (CentOS-7.0-1406-x86_64-Minimal.iso)
cdrom

# Using only primary disk, ignoring others
ignoredisk --only-use=sda

# Setting up language to English
lang en-US.UTF-8

# Setting up network interface to DHCP
network --bootproto=dhcp --ipv6=auto --hostname=template-centos7 --activate

# Root password
rootpw --iscrypted MiVcjRNTyXvZs

# Disable firewalld
firewall --disabled

# System timezone
timezone Europe/London --isUtc

# Set SElinux to permissive
selinux --permissive

# Disable X
skipx

# Set bootloader to use MBR partition and disable Meltdown and Spectre mechanisms
bootloader --location=mbr --append="nopti noibrs noibpb crashkernel=auto" --boot-drive=sda --iscrypted --password=grub.pbkdf2.sha512.10000.97A6C78DA019E010342C2AB7AC2B49FA0F46A00BA163849DF323C40C21E325282D16F8C6FD09DC4F25FA8A40EA38A18EB2F058B2BBB1BDCCE9B98058A2C73AA4.279C2913892DDCC11E3DF99A7C3165E3843A4A3551C2A67A749DE1CB915307D63780B79FB2E261C57DC06D96B3EC1B84505BB23D8A27BF4ECD108E3964FA612E

# Setting up Logical Volume Manager and autopartitioning
clearpart --all --drives=sda --initlabel
autopart --type=lvm

# Eject cdrom and reboot
reboot --eject

# Packages information
%packages --ignoremissing
@^minimal
@Core
chrony
-biosdevname
-iwl*firmware
-iprutils
-alsa-*
-plymouth*
%end

%include /tmp/network.ks
# Pre installation information
%pre --log=/root/ks-pre.log
# Figure out the name of the interface and activate as DHCP
ip addr | grep -i broadcast | awk '{ print $2 }' > /tmp/interface
sed -i 's/:/\ /g' /tmp/interface
interface=`cat /tmp/interface`
ns="10.0.11.1,10.0.11.2"
echo "network --hostname=template-centos7 --bootproto=dhcp --device=$interface --ipv6=auto --activate" >>/tmp/network.ks
echo "nameserver $ns" >>/etc/resolv.conf
%end

# Post installation information
%post --log=/root/anaconda-ks-post.log
# Remove Redhat/Centos7 naming convention
sed -i 's/^GRUB_CMDLINE_LINUX="[^"]*/& net.ifnames=0 biosdevname=0 loglevel=3/' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg
ip addr | grep -i broadcast | awk '{ print $2 }' > /tmp/interface
sed -i 's/:/\ /g' /tmp/interface
interface=`cat /tmp/interface`
sed -i 's/^NAME="[^"]*"$/NAME="eth0"/' /etc/sysconfig/network-scripts/ifcfg-$interface
sed -i 's/^DEVICE="[^"]*"$/DEVICE="eth0"/' /etc/sysconfig/network-scripts/ifcfg-$interface
mv /etc/sysconfig/network-scripts/ifcfg-$interface /etc/sysconfig/network-scripts/ifcfg-eth0
systemctl disable NetworkManager

# Enable provision user
useradd -m -G wheel -u 1100 provision -p aeZdifquIPmJM
mkdir /home/provision/.ssh
chmod 0700 /home/provision/.ssh
echo -e 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCwVwnSkmP5pfsiiifl8dFPkISpzW3oXIooAzT7rxfWI07NWRqywdYzEle3ociiGxBB7Lv3h0QhX6m4EnbheS9NgX4CMB/XuRPUGBXz5MgakXb05eJjiKThWD/IubDAnswJ4hKdCfJDuuTBodpx2lNPDsQYVD7QPZ1iF/2jjv+D1XPB5YJmNsL3zz1cmEVEOE3RoPCsZWGbGDjM6uiUg6pJdGatttJBI7/Kj0R0iMXZ0gcL+oMnB2nOMGut1jQcNbj/5q7Jp8xAxkIWz8zIN4zcFZujcitCThqORNdWQncjclNAN7vVNL9DSwoUhuw4zZGXxo8ioxfL7KhViJ5+XcqBN+feE/wgC50Bpj1wCa45zUd0asRR3+gzpRiMzqFqCNNWYhTQAkrBwRpqM/h7Qq53RVRe6lIPIAVeKcqrCcdFwRVenQQS6qMLZ85UdvctANS4Avqpvu5OsC5IH+9wDjYQZPQ7DefcDv8OWIPQOvTvGM4MKFlt5JkhiWlKOxi8ASM= dionescu@ITEM-AX32427 ' >> /home/provision/.ssh/authorized_keys
chown -R provision:provision /home/provision/.ssh
chmod 0644 /home/provision/.ssh/authorized_keys
adduser provision sudo

# Disable use of DNS for incoming connections via ssh
sed 's/#UseDNS yes/UseDNS no/g' /etc/ssh/sshd_config
yum install bc net-tools wget curl epel-release perl bzip2 bind-utils open-vm-tools tcpdump yum-utils telnet -y
yum update -y
yum clean all
systemctl enable NetworkManager

#Provisioning
yum install -y wget
curl -fsSL https://get.docker.com/ \ | sh
systemctl enable docker
curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
yum install -y git
sudo yum makecache
yum install -y unzip
yum install -y curl
sudo yum install -y centos-release-scl
sudo yum install -y rh-python36
sudo yum -y install zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel libffi-devel
curl https://pyenv.run | bash
%end

# Enforce password policies
%anaconda
pwpolicy root --minlen=10 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=10 --minquality=1 --notstrict --nochanges --notempty
pwpolicy luks --minlen=10 --minquality=1 --notstrict --nochanges --notempty
%end
